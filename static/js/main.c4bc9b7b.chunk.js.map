{"version":3,"sources":["context/applicationState.js","context/searchState.js","context/viewState.js","helpers/geo.js","PostcodeSearch.js","AppHeader.js","MeAvatar.js","MapSettings.js","LibraryMap.js","Notification.js","LibraryMapApplication.js","App.js","serviceWorker.js","index.js"],"names":["ApplicationStateContext","createContext","ApplicationStateProvider","reducer","initialState","children","Provider","value","useReducer","useApplicationStateValue","useContext","SearchStateContext","SearchStateProvider","useSearchStateValue","ViewStateContext","ViewStateProvider","useViewStateValue","config","require","getPostcode","postcode","a","axios","get","postcodeApi","response","location","data","longitude","latitude","organisation","library_service_name","useStyles","makeStyles","theme","grow","flexGrow","iconButton","padding","inputInput","paddingTop","spacing","paddingRight","paddingBottom","paddingLeft","fontWeight","search","position","border","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","marginRight","display","maxWidth","PostcodeSearch","searchType","searchPostcode","dispatchSearch","searchDistance","dispatchView","useState","tempPostcode","setTempPostcode","anchor","setAnchor","prevProps","ref","useRef","useEffect","current","usePrevious","closeSettingsMenu","setSearchDistance","type","postcodeSearch","notificationMessage","geoHelper","postcodeData","length","searchPosition","mapPosition","classes","className","InputBase","placeholder","input","onChange","e","target","Tooltip","title","IconButton","onClick","color","currentTarget","openSettingsMenu","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","ListSubheader","disableSticky","MenuItem","appBar","zIndex","drawer","appBarTransparent","iconTitle","progress","margin","tabBar","borderTop","borderBottom","verticalAlign","AppHeader","loadingOrganisations","loadingMobiles","loadingRoutes","loadingMobileLocations","loadingNearestMobiles","loadingPostcode","appsOpen","setAppsOpen","tabValue","setTabValue","loading","useLocation","sites","url","icon","links","short","to","site","siteUrl","Container","Typography","variant","component","AppBar","elevation","Tabs","v","scrollButtons","indicatorColor","textColor","map","idx","Tab","key","label","pathname","Toolbar","Hidden","smUp","link","Link","replace","disableRipple","disableFocusRipple","xsDown","mdUp","Button","size","smDown","CircularProgress","avatar","avatarOn","cursor","primary","main","MeAvatar","Avatar","dialog","MapSettings","mapSettings","mapSettingsDialogOpen","closeDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","disableBackdropClick","BackdropProps","invisible","PaperProps","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","authorityBoundary","mapSetting","name","DialogActions","settings","bottom","right","Map","ReactMapboxGl","minZoom","maxZoom","customAttribution","libraryAuthorityTiles","LibraryMap","mapZoom","style","center","zoom","pitch","bearing","fitBounds","containerStyle","top","left","height","width","tileJsonSource","tiles","sourceId","sourceLayer","layout","paint","coordinates","Fab","Notification","notificationOpen","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","action","aria-label","content","root","LibraryMapApplication","path","exact","render","props","window","substr","initialApplicationState","applicationReducer","state","initialSearchState","searchReducer","initialViewState","viewReducer","stopDialogOpen","createMuiTheme","deepOrange","secondary","blueGrey","overrides","MuiButton","text","textTransform","MuiTab","MuiTableCell","App","ThemeProvider","CssBaseline","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.c4bc9b7b.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nexport const ApplicationStateContext = createContext()\r\n\r\nexport const ApplicationStateProvider = ({ reducer, initialState, children }) => (\r\n  <ApplicationStateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </ApplicationStateContext.Provider>\r\n)\r\n\r\nexport const useApplicationStateValue = () => useContext(ApplicationStateContext)\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nexport const SearchStateContext = createContext()\r\n\r\nexport const SearchStateProvider = ({ reducer, initialState, children }) => (\r\n  <SearchStateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </SearchStateContext.Provider>\r\n)\r\n\r\nexport const useSearchStateValue = () => useContext(SearchStateContext)\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\nexport const ViewStateContext = createContext()\r\n\r\nexport const ViewStateProvider = ({ reducer, initialState, children }) => (\r\n  <ViewStateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </ViewStateContext.Provider>\r\n)\r\n\r\nexport const useViewStateValue = () => useContext(ViewStateContext)\r\n","import axios from 'axios'\r\n\r\nconst config = require('./config.json')\r\n\r\nexport function getPosition (options = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, options)\r\n  })\r\n}\r\n\r\nexport async function getCurrentPosition () {\r\n  var options = {\r\n    enableHighAccuracy: true,\r\n    timeout: 10000,\r\n    maximumAge: 0\r\n  }\r\n\r\n  const position = await getPosition(options)\r\n  return [position.coords.longitude, position.coords.latitude]\r\n}\r\n\r\nexport async function getPostcode (postcode) {\r\n  const response = await axios.get(config.postcodeApi + postcode)\r\n  return {\r\n    location: [response.data.longitude, response.data.latitude],\r\n    organisation: response.data.library_service_name\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport ListSubheader from '@material-ui/core/ListSubheader'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport { fade } from '@material-ui/core/styles/colorManipulator'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ClearIcon from '@material-ui/icons/ClearTwoTone'\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone'\r\nimport SettingsIcon from '@material-ui/icons/SettingsTwoTone'\r\n\r\nimport { useApplicationStateValue } from './context/applicationState'\r\nimport { useSearchStateValue } from './context/searchState'\r\nimport { useViewStateValue } from './context/viewState'\r\n\r\nimport * as geoHelper from './helpers/geo'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing(),\r\n    paddingRight: theme.spacing(),\r\n    paddingBottom: theme.spacing(),\r\n    paddingLeft: theme.spacing(2),\r\n    fontWeight: 500\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    border: '1px solid #E0E0E0',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.8),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.9)\r\n    },\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(),\r\n    display: 'flex',\r\n    maxWidth: 240\r\n  }\r\n}))\r\n\r\nfunction usePrevious (value) {\r\n  const ref = useRef()\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n  return ref.current\r\n}\r\n\r\nfunction PostcodeSearch () {\r\n  const [{ }, dispatchApplication] = useApplicationStateValue() //eslint-disable-line\r\n  const [{ searchType, searchPostcode, searchDistance }, dispatchSearch] = useSearchStateValue() //eslint-disable-line\r\n  const [{ }, dispatchView] = useViewStateValue() //eslint-disable-line\r\n\r\n  const [tempPostcode, setTempPostcode] = useState(searchPostcode)\r\n  const [anchor, setAnchor] = useState(null)\r\n\r\n  const prevProps = usePrevious({ searchPostcode })\r\n  useEffect(() => {\r\n    if (prevProps && searchPostcode !== prevProps.searchPostcode) setTempPostcode(searchPostcode)\r\n  }, [searchPostcode]) // eslint-disable-line\r\n\r\n  const openSettingsMenu = (e) => setAnchor(e.currentTarget)\r\n\r\n  const closeSettingsMenu = () => setAnchor(null)\r\n\r\n  const setSearchDistance = (searchDistance) => {\r\n    closeSettingsMenu()\r\n    dispatchSearch({ type: 'SetSearchDistance', searchDistance: searchDistance })\r\n    if (searchType === 'postcode') postcodeSearch()\r\n  }\r\n\r\n  const postcodeSearch = async () => {\r\n    if (tempPostcode === '') {\r\n      dispatchView({ type: 'ShowNotification', notificationMessage: 'You must enter a postcode' })\r\n      return\r\n    }\r\n\r\n    dispatchView({ type: 'LoadingPostcode' })\r\n    const postcodeData = await geoHelper.getPostcode(tempPostcode)\r\n    if (postcodeData.location && postcodeData.location.length === 2) {\r\n      dispatchSearch({ type: 'SetPostcodeSearch', searchPostcode: tempPostcode, searchPosition: postcodeData.location })\r\n      dispatchView({ type: 'SetPostcodeSearch', mapPosition: postcodeData.location })\r\n    } else {\r\n      dispatchView({ type: 'ShowNotification', notificationMessage: 'Could not find postcode' })\r\n    }\r\n  }\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <InputBase\r\n        placeholder='Postcode'\r\n        classes={{\r\n          input: classes.inputInput\r\n        }}\r\n        value={tempPostcode}\r\n        onChange={(e) => setTempPostcode(e.target.value)}\r\n      />\r\n      <div className={classes.grow} />\r\n      {searchType === 'postcode'\r\n        ? (\r\n          <Tooltip title='Clear search'>\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              onClick={() => dispatchSearch({ type: 'ClearAll' })}\r\n            >\r\n              <ClearIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )\r\n        : null}\r\n      <Tooltip title='Search by postcode'>\r\n        <IconButton\r\n          color='primary'\r\n          className={classes.iconButton}\r\n          onClick={() => postcodeSearch()}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Tooltip title='Change search settings'>\r\n        <IconButton\r\n          className={classes.iconButton}\r\n          color='secondary'\r\n          onClick={(e) => { openSettingsMenu(e) }}\r\n        >\r\n          <SettingsIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id='mnu-settings'\r\n        anchorEl={anchor}\r\n        keepMounted\r\n        open={Boolean(anchor)}\r\n        onClose={() => closeSettingsMenu()}\r\n      >\r\n        <ListSubheader disableSticky>Search distance</ListSubheader>\r\n        <MenuItem onClick={() => setSearchDistance(1609)}>1 mile</MenuItem>\r\n        <MenuItem onClick={() => setSearchDistance(4827)}>3 miles</MenuItem>\r\n        <MenuItem onClick={() => setSearchDistance(8045)}>5 miles</MenuItem>\r\n        <MenuItem onClick={() => setSearchDistance(16090)}>10 miles</MenuItem>\r\n        <MenuItem onClick={() => setSearchDistance(32180)}>20 miles</MenuItem>\r\n        <MenuItem onClick={() => setSearchDistance(80450)}>50 miles</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostcodeSearch\r\n","import React, { useState } from 'react'\r\n\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Button from '@material-ui/core/Button'\r\nimport Container from '@material-ui/core/Container'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport Hidden from '@material-ui/core/Hidden'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport WidgetsIcon from '@material-ui/icons/WidgetsTwoTone'\r\nimport DirectionBusIcon from '@material-ui/icons/DirectionsBusTwoTone'\r\nimport HomeIcon from '@material-ui/icons/HomeTwoTone'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOnTwoTone'\r\nimport MapIcon from '@material-ui/icons/MapTwoTone'\r\nimport LocalLibraryIcon from '@material-ui/icons/LocalLibraryTwoTone'\r\nimport BookIcon from '@material-ui/icons/BookTwoTone'\r\nimport HeadsetIcon from '@material-ui/icons/HeadsetTwoTone'\r\nimport MovieIcon from '@material-ui/icons/MovieTwoTone'\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useViewStateValue } from './context/viewState'\r\n\r\nimport PostcodeSearch from './PostcodeSearch'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  appBarTransparent: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: 'rgba(250, 250, 250, 0.8)'\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  iconTitle: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  progress: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  tabBar: {\r\n    borderTop: '1px solid #e8e8e8',\r\n    borderBottom: '1px solid #e8e8e8'\r\n  },\r\n  title: {\r\n    margin: theme.spacing(2),\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle'\r\n  }\r\n}))\r\n\r\nfunction AppHeader () {\r\n  const [{ loadingOrganisations, loadingMobiles, loadingRoutes, loadingMobileLocations, loadingNearestMobiles, loadingPostcode }] = useViewStateValue()\r\n\r\n  const [appsOpen, setAppsOpen] = useState(false)\r\n  const [tabValue, setTabValue] = useState(2)\r\n\r\n  const loading = loadingOrganisations || loadingMobiles || loadingRoutes || loadingMobileLocations || loadingNearestMobiles || loadingPostcode\r\n\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n\r\n  const sites = [\r\n    {\r\n      title: 'Libraries at home',\r\n      url: 'https://www.librariesathome.co.uk',\r\n      icon: <HomeIcon />,\r\n      links: [\r\n        {\r\n          title: <span className={classes.iconTitle}>Search</span>,\r\n          short: <span className={classes.iconTitle}>Search</span>,\r\n          icon: <SearchIcon />,\r\n          to: 'https://www.librariesathome.co.uk'\r\n        },\r\n        {\r\n          title: <span className={classes.iconTitle}>Watch</span>,\r\n          short: <span className={classes.iconTitle}>Watch</span>,\r\n          icon: <MovieIcon />,\r\n          to: 'https://www.librariesathome.co.uk/watch'\r\n        },\r\n        {\r\n          title: <span className={classes.iconTitle}>Read</span>,\r\n          short: <span className={classes.iconTitle}>Read</span>,\r\n          icon: <BookIcon />,\r\n          to: 'https://www.librariesathome.co.uk/read'\r\n        },\r\n        {\r\n          title: <span className={classes.iconTitle}>Listen</span>,\r\n          short: <span className={classes.iconTitle}>Listen</span>,\r\n          icon: <HeadsetIcon />,\r\n          to: 'https://www.librariesathome.co.uk/listen'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Mobile libraries',\r\n      url: 'https://www.mobilelibraries.org',\r\n      icon: <DirectionBusIcon />,\r\n      links: [\r\n        {\r\n          title: <span className={classes.iconTitle}>Mobile vans</span>,\r\n          short: <span className={classes.iconTitle}>Vans</span>,\r\n          icon: <DirectionBusIcon />,\r\n          to: 'https://www.mobilelibraries.org/'\r\n        },\r\n        {\r\n          title: <span className={classes.iconTitle}>Stop locations</span>,\r\n          short: <span className={classes.iconTitle}>Stops</span>,\r\n          icon: <LocationOnIcon />,\r\n          to: 'https://www.mobilelibraries.org/stops'\r\n        },\r\n        {\r\n          title: <span className={classes.iconTitle}>Map</span>,\r\n          short: <span className={classes.iconTitle}>Map</span>,\r\n          icon: <MapIcon />,\r\n          to: 'https://www.mobilelibraries.org/map'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Library map',\r\n      url: 'https://www.librarymap.co.uk',\r\n      icon: <LocalLibraryIcon />,\r\n      links: [\r\n        {\r\n          title: <span className={classes.iconTitle}>Library map</span>,\r\n          short: <span className={classes.iconTitle}>Map</span>,\r\n          icon: <MapIcon />,\r\n          to: '/'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const site = tabValue\r\n\r\n  const siteUrl = sites[site].url\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth='lg'>\r\n        <IconButton color='primary' onClick={() => { setAppsOpen(!appsOpen) }}>\r\n          <WidgetsIcon />\r\n        </IconButton>\r\n        <Typography color='secondary' variant='h6' component='h1' className={classes.title}>{sites[site].title}</Typography>\r\n      </Container>\r\n      {appsOpen ? (\r\n        <AppBar position='static' color='default' elevation={0}>\r\n          <Container maxWidth='lg'>\r\n            <Tabs\r\n              className={classes.tabBar}\r\n              value={tabValue}\r\n              onChange={(e, v) => { setTabValue(v) }}\r\n              variant='scrollable'\r\n              scrollButtons='on'\r\n              indicatorColor='primary'\r\n              textColor='primary'\r\n            >\r\n              {sites.map((site, idx) => {\r\n                return (\r\n                  <Tab key={'tb_site_' + idx} label={site.title} icon={site.icon} />\r\n                )\r\n              })}\r\n            </Tabs>\r\n          </Container>\r\n        </AppBar>\r\n      ) : null}\r\n      <AppBar\r\n        position={(location.pathname === '/' ? 'fixed' : 'static')}\r\n        color='inherit'\r\n        elevation={0}\r\n        className={(location.pathname === '/' ? classes.appBarTransparent : classes.appBar)}\r\n      >\r\n        <Container maxWidth='lg'>\r\n          <Toolbar>\r\n            <Hidden smUp>\r\n              {sites[tabValue].links.map((link, idx) => {\r\n                return (\r\n                  <Tooltip title={link.title} key={'icnb_menu_md_' + idx}>\r\n                    <IconButton\r\n                      component={Link}\r\n                      to={link.to.replace(siteUrl, '')}\r\n                      disableRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      disableFocusRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      color={(location.pathname === link.to.replace(siteUrl, '') ? 'secondary' : 'primary')}\r\n                    >\r\n                      {link.icon}\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )\r\n              })}\r\n            </Hidden>\r\n            <Hidden xsDown mdUp>\r\n              {sites[tabValue].links.map((link, idx) => {\r\n                return (\r\n                  <Tooltip title={link.title} key={'icnb_menu_lg_' + idx}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={link.to.replace(siteUrl, '')}\r\n                      disableRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      disableFocusRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      color={(location.pathname === link.to.replace(siteUrl, '') ? 'secondary' : 'primary')}\r\n                      size='large'\r\n                    >\r\n                      {link.icon}{link.short}\r\n                    </Button>\r\n                  </Tooltip>\r\n                )\r\n              })}\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              {sites[tabValue].links.map((link, idx) => {\r\n                return (\r\n                  <Tooltip title={link.title} key={'icnb_menu_lg_' + idx}>\r\n                    <Button\r\n                      component={Link}\r\n                      to={link.to.replace(siteUrl, '')}\r\n                      disableRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      disableFocusRipple={location.pathname === link.to.replace(siteUrl, '')}\r\n                      color={(location.pathname === link.to.replace(siteUrl, '') ? 'secondary' : 'primary')}\r\n                      size='large'\r\n                    >\r\n                      {link.icon}{link.title}\r\n                    </Button>\r\n                  </Tooltip>\r\n                )\r\n              })}\r\n            </Hidden>\r\n            {loading ? <CircularProgress className={classes.progress} color='primary' size={30} /> : null}\r\n            <span className={classes.grow} />\r\n            {location.pathname === '/map' ? <PostcodeSearch /> : null}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\n\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useSearchStateValue } from './context/searchState'\r\n\r\nimport Face from '@material-ui/icons/FaceTwoTone'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    margin: 0\r\n  },\r\n  avatarOn: {\r\n    margin: 0,\r\n    cursor: 'pointer',\r\n    backgroundColor: theme.palette.primary.main\r\n  }\r\n}))\r\n\r\nfunction MeAvatar () {\r\n  const [{ searchType }] = useSearchStateValue()\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Tooltip title='Me'>\r\n      <Avatar\r\n        className={searchType === 'gps' ? classes.avatarOn : classes.avatar}\r\n      >\r\n        <Face />\r\n      </Avatar>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport default MeAvatar\r\n","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\n\r\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useViewStateValue } from './context/viewState'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  dialog: {\r\n    border: '1px solid #E0E0E0'\r\n  }\r\n}))\r\n\r\nfunction MapSettings () {\r\n  const [{ mapSettings, mapSettingsDialogOpen }, dispatchView] = useViewStateValue()\r\n\r\n  const closeDialog = () => {\r\n    dispatchView({ type: 'SetMapSettingsDialog', mapSettingsDialogOpen: false })\r\n  }\r\n\r\n  const handleAuthorityBoundaryChange = () => {\r\n    dispatchView({ type: 'ToggleMapSetting', mapSetting: 'authorityBoundary' })\r\n  }\r\n\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      disableBackdropClick\r\n      open={mapSettingsDialogOpen}\r\n      onClose={closeDialog}\r\n      BackdropProps={{\r\n        invisible: true\r\n      }}\r\n      PaperProps={{ elevation: 0, className: classes.dialog }}\r\n    >\r\n      <DialogTitle>Map settings</DialogTitle>\r\n      <DialogContent>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={mapSettings.authorityBoundary}\r\n              onChange={handleAuthorityBoundaryChange}\r\n              name='sw_authority_boundary'\r\n              color='primary'\r\n            />\r\n          }\r\n          label='Library service boundaries'\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeDialog} color='secondary'>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default MapSettings\r\n","import React, { useEffect } from 'react'\r\n\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\n\r\nimport ReactMapboxGl, { ZoomControl, Source, Layer, Marker } from 'react-mapbox-gl'\r\n\r\nimport LayersIcon from '@material-ui/icons/LayersTwoTone'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useApplicationStateValue } from './context/applicationState'\r\nimport { useSearchStateValue } from './context/searchState'\r\nimport { useViewStateValue } from './context/viewState'\r\n\r\nimport MeAvatar from './MeAvatar'\r\nimport MapSettings from './MapSettings'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  settings: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(4),\r\n    right: theme.spacing(4)\r\n  }\r\n}))\r\n\r\nconst config = require('./helpers/config.json')\r\n\r\nconst Map = ReactMapboxGl({\r\n  minZoom: 5,\r\n  maxZoom: 18,\r\n  customAttribution: 'Contains public sector information licensed under the Open Government Licence'\r\n})\r\n\r\nconst libraryAuthorityTiles = [config.libraryAuthorityTiles]\r\n\r\nfunction LibraryMap () {\r\n  const [{ }, dispatchApplication] = useApplicationStateValue() //eslint-disable-line\r\n  const [{ searchType, searchPosition }, dispatchSearch] = useSearchStateValue() //eslint-disable-line\r\n  const [{ mapZoom, mapPosition, mapSettings, mapSettingsDialogOpen }, dispatchView] = useViewStateValue() //eslint-disable-line\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Map\r\n        style='style.json' // eslint-disable-line\r\n        center={mapPosition}\r\n        zoom={mapZoom}\r\n        maxZoom={17}\r\n        pitch={[0]}\r\n        bearing={[0]}\r\n        fitBounds={null}\r\n        containerStyle={{ top: 0, bottom: 0, right: 0, left: 0, height: '100vh', width: '100vw', position: 'absolute' }}\r\n      >\r\n        <Source\r\n          id='src_library_authorities'\r\n          tileJsonSource={{\r\n            type: 'vector',\r\n            tiles: libraryAuthorityTiles\r\n          }}\r\n        />\r\n        {mapSettings.authorityBoundary\r\n          ? (\r\n            <>\r\n              <Layer\r\n                id='lyr_library_authorities_lines'\r\n                type='line'\r\n                sourceId='src_library_authorities'\r\n                sourceLayer='library_authority_boundaries'\r\n                minZoom={6}\r\n                layout={{\r\n                  'line-join': 'round',\r\n                  'line-cap': 'square'\r\n                }}\r\n                paint={{\r\n                  'line-color': '#a7a39b',\r\n                  'line-opacity': 1,\r\n                  'line-width': [\r\n                    'interpolate',\r\n                    [\r\n                      'linear'\r\n                    ],\r\n                    [\r\n                      'zoom'\r\n                    ],\r\n                    6, 1,\r\n                    22, 4\r\n                  ]\r\n                }}\r\n              />\r\n              <Layer\r\n                id='lyr_library_authorities_fill'\r\n                type='fill'\r\n                sourceId='src_library_authorities'\r\n                sourceLayer='library_authority_boundaries'\r\n                minZoom={6}\r\n                paint={{\r\n                  'fill-color': '#ccc',\r\n                  'fill-opacity': 0.1\r\n                }}\r\n              />\r\n            </>\r\n          ) : null}\r\n        {searchPosition && searchPosition.length > 1\r\n          ? (\r\n            <Marker\r\n              key='mk_me'\r\n              coordinates={[searchPosition[0], searchPosition[1]]}\r\n            >\r\n              <MeAvatar searchType={searchType} />\r\n            </Marker>\r\n          )\r\n          : null}\r\n        <ZoomControl position='bottom-left' />\r\n      </Map>\r\n      <Tooltip\r\n        title='Map settings'\r\n      >\r\n        <Fab\r\n          size='small'\r\n          className={classes.settings}\r\n          color='primary'\r\n          style={{\r\n            color: 'white',\r\n            border: '1px solid #FFFFFF'\r\n          }}\r\n          onClick={() => dispatchView({ type: 'SetMapSettingsDialog', mapSettingsDialogOpen: true })}\r\n        >\r\n          <LayersIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <MapSettings\r\n        mapSettings={mapSettings}\r\n        mapSettingsDialogOpen={mapSettingsDialogOpen}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LibraryMap\r\n","import React from 'react'\r\n\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\n\r\nimport CloseIcon from '@material-ui/icons/CloseTwoTone'\r\n\r\nimport { useViewStateValue } from './context/viewState'\r\n\r\nfunction Notification () {\r\n  const [{ notificationOpen, notificationMessage }, dispatchView] = useViewStateValue() //eslint-disable-line\r\n\r\n  const handleClose = () => {\r\n    dispatchView({ type: 'SetNotification', notificationOpen: false })\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left'\r\n      }}\r\n      open={notificationOpen}\r\n      autoHideDuration={3000}\r\n      onClose={handleClose}\r\n      ContentProps={{\r\n        'aria-describedby': 'message-id'\r\n      }}\r\n      message={<span id='message-id'>{notificationMessage}</span>}\r\n      action={[\r\n        <IconButton\r\n          key='close'\r\n          aria-label='close'\r\n          onClick={handleClose}\r\n        >\r\n          <CloseIcon color='inherit' />\r\n        </IconButton>\r\n      ]}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useEffect } from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nimport Container from '@material-ui/core/Container'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport AppHeader from './AppHeader'\r\nimport LibraryMap from './LibraryMap'\r\nimport Notification from './Notification'\r\n\r\nimport { useApplicationStateValue } from './context/applicationState'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2)\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n}))\r\n\r\nfunction LibraryMapApplication () {\r\n  const [{ }, dispatchApplicationState] = useApplicationStateValue() //eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    // Initial data setup\r\n  }, []) //eslint-disable-line\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className={classes.root}>\r\n        <AppHeader />\r\n        <Container maxWidth='lg'>\r\n          <main className={classes.content}>\r\n            <Route path='/' exact render={() => <LibraryMap />} />\r\n            <Route path={['/http:', '/https:']} component={props => { window.location.replace(props.location.pathname.substr(1)); return null }} />\r\n          </main>\r\n        </Container>\r\n        <Notification />\r\n      </div>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default LibraryMapApplication\r\n","import React from 'react'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport blueGrey from '@material-ui/core/colors/blueGrey'\nimport deepOrange from '@material-ui/core/colors/deepOrange'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport { ApplicationStateProvider } from './context/applicationState'\nimport { SearchStateProvider } from './context/searchState'\nimport { ViewStateProvider } from './context/viewState'\n\nimport LibraryMapApplication from './LibraryMapApplication'\n\nconst initialApplicationState = {\n\n}\n\nconst applicationReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\nconst initialSearchState = {\n  searchPostcode: '',\n  searchType: '',\n  searchDistance: 1609,\n  searchPosition: []\n}\n\nconst searchReducer = (state, action) => {\n  switch (action.type) {\n    case 'SetSearchDistance':\n      return {\n        ...state,\n        searchDistance: action.searchDistance\n      }\n    case 'SetPostcodeSearch':\n      return {\n        ...state,\n        searchPostcode: action.searchPostcode,\n        searchPosition: action.searchPosition,\n        searchType: 'postcode'\n      }\n    default:\n      return state\n  }\n}\n\nconst initialViewState = {\n  notificationOpen: false,\n  notificationMessage: '',\n  mapZoom: [7],\n  mapPosition: [-1.155414, 52.691432],\n  mapSettings: {\n    authorityBoundary: false\n  },\n  mapSettingsDialogOpen: false,\n  loadingPostcode: false\n}\n\nconst viewReducer = (state, action) => {\n  switch (action.type) {\n    case 'SetNotificationMessage':\n      return { ...state, notificationMessage: action.notificationMessage }\n    case 'SetNotification':\n      return { ...state, notificationOpen: action.notificationOpen }\n    case 'ShowNotification':\n      return { ...state, notificationOpen: true, notificationMessage: action.notificationMessage }\n    case 'SetStopDialog':\n      return { ...state, stopDialogOpen: action.stopDialogOpen }\n    case 'SetMapSettingsDialog':\n      return { ...state, mapSettingsDialogOpen: action.mapSettingsDialogOpen }\n    case 'ToggleMapSetting': {\n      const settings = state.mapSettings\n      settings[action.mapSetting] = !settings[action.mapSetting]\n      return { ...state, mapSettings: settings }\n    }\n    case 'SetPostcodeSearch':\n      return { ...state, loadingPostcode: false, mapPosition: action.mapPosition, mapZoom: [13] }\n    case 'SetMapPosition':\n      return { ...state, mapPosition: action.mapPosition, mapZoom: [action.mapZoom] }\n    default:\n      return state\n  }\n}\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: deepOrange[800]\n    },\n    secondary: {\n      main: blueGrey[700]\n    }\n  },\n  overrides: {\n    MuiButton: {\n      text: {\n        textTransform: 'none'\n      }\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none'\n      }\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: 'none'\n      }\n    }\n  }\n})\n\nfunction App () {\n  return (\n    <ApplicationStateProvider initialState={initialApplicationState} reducer={applicationReducer}>\n      <SearchStateProvider initialState={initialSearchState} reducer={searchReducer}>\n        <ViewStateProvider initialState={initialViewState} reducer={viewReducer}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <LibraryMapApplication />\n          </ThemeProvider>\n        </ViewStateProvider>\n      </SearchStateProvider>\n    </ApplicationStateProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}